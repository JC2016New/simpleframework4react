{"ast":null,"code":"import axios from 'axios';\nexport function request(url, action) {\n  if (!action.method) return;\n  axios.defaults.headers = {\n    'X-Token': 'zh,1072477336055582722,35915c18f04949b3a09e3efc1c28f40d,1,e514f9a54f8e54eaad66079de3ab01ae71f148075d36955db910049e47812389' // 添加请求拦截器\n\n  };\n  axios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n  }, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  }); // 添加响应拦截器\n\n  axios.interceptors.response.use(function (response) {\n    // 对响应数据做点什么\n    return response;\n  }, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  });\n\n  var success = function success(res) {\n    return res.data;\n  };\n\n  var fail = function fail() {\n    return '返回错误';\n  };\n\n  var params = null;\n\n  if (action.method === 'post') {\n    params = action.params;\n  } else if (action.method === 'get') {\n    params = {\n      params: action.params\n    };\n  }\n\n  return new Promise(function (resolve, reject) {\n    axios[action.method](url, params).then(function (res) {\n      success(res);\n      resolve(res.data);\n    }).catch(function (response) {\n      fail(response);\n      reject(response);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/wanjie/Desktop/work/study/two/sfreact/src/utils/request.js"],"names":["axios","request","url","action","method","defaults","headers","interceptors","use","config","error","Promise","reject","response","success","res","data","fail","params","resolve","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;AACjC,MAAI,CAACA,MAAM,CAACC,MAAZ,EAAoB;AACpBJ,EAAAA,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB;AACrB,eAAW,4HADU,CAGzB;;AAHyB,GAAzB;AAIAN,EAAAA,KAAK,CAACO,YAAN,CAAmBN,OAAnB,CAA2BO,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C;AACA,WAAOA,MAAP;AACH,GAHD,EAGG,UAAUC,KAAV,EAAiB;AAChB;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAND,EANiC,CAcjC;;AACAV,EAAAA,KAAK,CAACO,YAAN,CAAmBM,QAAnB,CAA4BL,GAA5B,CAAgC,UAAUK,QAAV,EAAoB;AAChD;AACA,WAAOA,QAAP;AACH,GAHD,EAGG,UAAUH,KAAV,EAAiB;AAChB;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAND;;AAQA,MAAII,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACnB,WAAOA,GAAG,CAACC,IAAX;AACH,GAFD;;AAGA,MAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACb,WAAO,MAAP;AACH,GAFD;;AAGA,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIf,MAAM,CAACC,MAAP,KAAkB,MAAtB,EAA8B;AAC1Bc,IAAAA,MAAM,GAAGf,MAAM,CAACe,MAAhB;AACH,GAFD,MAEO,IAAIf,MAAM,CAACC,MAAP,KAAkB,KAAtB,EAA6B;AAChCc,IAAAA,MAAM,GAAG;AAAEA,MAAAA,MAAM,EAAEf,MAAM,CAACe;AAAjB,KAAT;AACH;;AACD,SAAO,IAAIP,OAAJ,CAAY,UAACQ,OAAD,EAAUP,MAAV,EAAqB;AACpCZ,IAAAA,KAAK,CAACG,MAAM,CAACC,MAAR,CAAL,CAAqBF,GAArB,EAA0BgB,MAA1B,EAAkCE,IAAlC,CAAuC,UAAAL,GAAG,EAAI;AAC1CD,MAAAA,OAAO,CAACC,GAAD,CAAP;AACAI,MAAAA,OAAO,CAACJ,GAAG,CAACC,IAAL,CAAP;AACH,KAHD,EAGGK,KAHH,CAGS,UAAAR,QAAQ,EAAI;AACjBI,MAAAA,IAAI,CAACJ,QAAD,CAAJ;AACAD,MAAAA,MAAM,CAACC,QAAD,CAAN;AACH,KAND;AAOH,GARM,CAAP;AASH","sourcesContent":["import axios from 'axios'\n\nexport function request(url, action) {\n    if (!action.method) return;\n    axios.defaults.headers = {\n        'X-Token': 'zh,1072477336055582722,35915c18f04949b3a09e3efc1c28f40d,1,e514f9a54f8e54eaad66079de3ab01ae71f148075d36955db910049e47812389'\n    }\n    // 添加请求拦截器\n    axios.interceptors.request.use(function (config) {\n        // 在发送请求之前做些什么\n        return config;\n    }, function (error) {\n        // 对请求错误做些什么\n        return Promise.reject(error);\n    });\n\n    // 添加响应拦截器\n    axios.interceptors.response.use(function (response) {\n        // 对响应数据做点什么\n        return response;\n    }, function (error) {\n        // 对响应错误做点什么\n        return Promise.reject(error);\n    });\n\n    let success = (res) => {\n        return res.data;\n    }\n    let fail = () => {\n        return '返回错误'\n    }\n    let params = null;\n    if (action.method === 'post') {\n        params = action.params;\n    } else if (action.method === 'get') {\n        params = { params: action.params }\n    }\n    return new Promise((resolve, reject) => {\n        axios[action.method](url, params).then(res => {\n            success(res);\n            resolve(res.data)\n        }).catch(response => {\n            fail(response);\n            reject(response);\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}